import sys

def main(args):
	sort = 1
	test_list = [498.48421604004557, 361.41805920022153, 251.1261515432591, 892.0084528646584, 86.08633017841782,
				 879.7092528849919, 976.5198146407504, 156.56966768410507, 402.73621259262836, 832.6641900610122,
				 127.85821408358488, 500.22465345708434, 211.58465401846638, 97.40105581661007, 824.2963562515611,
				 987.124441128884, 556.9145635157038, 89.29594829960163, 538.8668107829495, 637.4043496827236,
				 211.17103765707267, 242.50736433049315, 175.9529686178828, 455.267361576056, 101.01234222203081,
				 959.1416317272763, 188.65990441084378, 945.8344424160699, 384.55267271420746, 875.394468778921,
				 81.03997937388175, 985.5300537472128, 562.9287633177448, 302.8298013583912, 11.744617764072096,
				 885.1028994027132, 396.2552791041706, 805.3802714122415, 492.6871825599025, 251.9603086894213,
				 19.627187081498356, 461.75198023423616, 582.8665345847282, 165.7495561962091, 88.55779721698298,
				 447.2149315405902, 705.0591268431934, 630.4493879507683, 917.1412844554607, 522.4688228765683,
				 489.78572095698127, 10.704586576595343, 147.10768952829056, 93.16969187414203, 80.2253462620961,
				 529.3042187694576, 928.5536853139738, 586.3917217216465, 577.0596324544213, 89.75055996133973,
				 558.3591189997055, 25.009024249724064, 733.2302376653257, 291.7174420868715, 43.96252144614865,
				 905.300834354952, 924.2158319847274, 736.4956431426888, 260.31054531700784, 157.38200625050635,
				 944.9600348559679, 902.4544430905888, 836.9159246725311, 116.74572691862816, 738.024214642674,
				 735.2135546502492, 308.0714493946225, 298.248863273912, 490.5900978292452, 532.7025430860816,
				 930.810124161759, 133.5551110212103, 413.02050206673925, 958.0253416532138, 973.5591975457536,
				 93.45095109375457, 648.8421142414286, 59.46228631327388, 74.06611410350772, 431.1275339192854,
				 754.4956097239832, 498.64862583811833, 764.8120170151932, 130.7207708916378, 763.8494357947844,
				 536.4580127534585, 919.5260080360908, 166.53997683328515, 38.281073564273235, 342.45728717140435]
	if (sort == 1):
		test_list = insertion(test_list)
		print(is_sorted(test_list))


def is_sorted(list_in):
	"""
	>>> is_sorted([1, 2, 3, 4, 5])
	True
	>>> is_sorted([1, 2, 3, 3, 5])
	True
	>>> is_sorted([1, 2, 3, 5, 4])
	False
	""" 
	for i in range((len(list_in) - 1)):
		if (list_in[i] > list_in[(i + 1)]):
			return False
	return True

def swap(list_in, x, y):
	list_in[x], list_in[y] = list_in[y], list_in[x]
	return list_in

def insertion(list_in):
	for i in range(len(list_in)):
		j = i
		while (j > 0) and (list_in[(j-1)] > list_in[j]):
			swap(list_in, j, (j-1))
			j -= 1
	return list_in

"""
quick
merge
inplacemerge
heap
introsort
selection
timsort
cubesort
shell sort
bubble sort
binary tree sort
cycle sort
library sort
patience sorting
smoothsort
strand sort
tournament sort
cocktail sort
comb sort
gnome sort
unshuffle sort
Franchesimini's method
blocksort
odd even sort
"""


if __name__ == '__main__':
    main(sys.argv)
